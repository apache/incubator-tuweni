/*
 * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE
 * file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file
 * to You under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
jar { enabled = false }

dependencies {

  testCompile project(':junit')
  testCompile 'com.fasterxml.jackson.core:jackson-databind'
  testCompile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
  testCompile 'org.bouncycastle:bcprov-jdk15on'
  testCompile 'org.junit.jupiter:junit-jupiter-api'
  testCompile 'org.junit.jupiter:junit-jupiter-params'

  testRuntime 'org.junit.jupiter:junit-jupiter-engine'
}

def submodulePresent = file("${projectDir}/src/test/resources/README.md").exists()
def testsPresent = file("${projectDir}/src/test/java/").exists()
if (!submodulePresent && testsPresent) {
  println """${projectDir}/src/test/resources missing: please clone submodules (git submodule update --init --recursive)
Reference test validations will not be performed.
"""
}

test.enabled = submodulePresent
