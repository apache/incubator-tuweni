/*
 * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE
 * file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file
 * to You under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

description = 'Ethereum Faucet'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.jetbrains.kotlin.plugin.spring'

bootJar {
  enabled = true
  mainClassName = 'org.apache.tuweni.faucet.FaucetApplicationKt'
}

jar {
  enabled = false
}

dependencies {
  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
  implementation 'io.vertx:vertx-core'
  implementation 'io.vertx:vertx-lang-kotlin'
  implementation 'io.vertx:vertx-lang-kotlin-coroutines'
  implementation 'org.bouncycastle:bcprov-jdk15on'
  implementation 'org.springframework:spring-webflux'
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
  implementation("org.jetbrains.kotlin:kotlin-reflect")
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation("org.springframework.boot:spring-boot-starter")
  implementation("org.springframework.boot:spring-boot-starter-web")
  implementation("org.springframework.boot:spring-boot-starter-security")
  implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
  implementation project(':wallet')
  implementation project(':bytes')
  implementation project(':eth')
  implementation project(':jsonrpc')
  implementation project(':units')

  testImplementation project(':junit')
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testImplementation 'org.junit.jupiter:junit-jupiter-params'
  testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin'
  testImplementation 'org.mockito:mockito-junit-jupiter'
  testImplementation 'org.glassfish.jersey.core:jersey-client'
  testImplementation("org.springframework.boot:spring-boot-starter-test")
  testImplementation("org.springframework.security:spring-security-test")

  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

  runtimeOnly 'ch.qos.logback:logback-classic'
}

